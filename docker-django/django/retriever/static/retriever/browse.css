/*画面背景は薄グレー、画面と同じ大きさになるよう設定する*/
main{
    background-color: #444;
    background-origin: border-box;

    width: 100vw !important;
    max-width: none;
    height: 100vh !important;
    box-sizing: border-box;
    /*border: 1px solid red;*/
    top: 0px;
    left: 0px;
    padding: 0px;
    margin: 0px;
}




/*ジャンル選択画面の表示設定*/
.genreSelect{
    display: flex;
    padding: 10vh 10vw;
    height: 80vh;
    width: 80vw;
    box-sizing: content-box;
}
/*縦幅を画面ソコソコいっぱいにするよう指定。はみ出し分はスクロールで見せる*/
.genreSelect .listBox{
    height: 80vh;
    overflow-y: scroll;
    flex-grow: 1;

    background: white;
}
/*リストの左端はスクロールしやすいように開けておく*/
.genreSelect #genreList{
    padding: 10px;
    margin: 0px;
    list-style-type: none;

    margin-left: 2.5rem;
}
.genreSelect #genreList li{
    background: #f6f6f6;
    border:1px solid rgba(0,0,0,.125);
    border-radius: 0.25rem;
}
/*リストの選択フィードバックのための背景指定*/
/*できれば共通CSSの利用を試みるORココで使えるように共通CSSの書き方を工夫する*/
.genreSelect #genreList .ui-selecting{
    background: #94bfc0
}
.genreSelect #genreList .ui-selected{
    background: #51a1a2
}
/*ボタンは縦長になる。画面との離隔距離でサイズを指定*/
.genreSelect input{
    margin: 4rem 1rem;
}




/*コンテンツ表示画面の表示設定*/
/*極力画面いっぱい、画面中央に位置合わせする*/
.imageBox, .videoBox{
    width: 100vw;
    height: 100vh;

    display: flex;
    justify-content: center;
    align-items: center;

    flex-shrink: 0;
}
/*コンテンツDOMの表示設定最大サイズだけを指定して縦横比の維持を自動計算させる*/
.imageBox img{
    display: block;
    max-width: 100vw;
    max-height: 100vh;
}
/*上と書いてるコト同じやんけ*/
.videoBox video{
    display: block;
    max-width: 100vw;
    max-height: 100vh;
}




/*jquery UI アイコン利用設定*/
/*アイコン背景はスモークグレーに*/
span.iconWrapper{
    background: rgba(0,0,0,.125);
}
/*アイコン用画像は取り寄せ。アイコン画像の位置はbootstrapがやってくれる　*/
span.ui-icon{
    background-image: url("https://code.jquery.com/ui/1.12.1/themes/base/images/ui-icons_ffffff_256x240.png");
}




/*次ファイル、巻き戻しボタンの表示設定*/
.prev{
    /*巻き戻しボタンは左端にベタ付け、縦長ボタンにする*/
    position: fixed;
    top: 0px;
    left: 0px;
    height: 100vh;
    width: 2.5rem;
    z-index: 1000;

    /*アイコンを中央に表示*/
    display: flex;
    justify-content: center;
    align-items: center;

}
.next{
    /*次ファイルボタンは右端にベタ付け、縦長ボタンにする*/
    position: fixed;
    top: 0px;
    right: 0px;
    height: 100vh;
    width: 2.5rem;
    z-index: 1010;

    /*アイコンを中央に表示*/
    /*ココは共通定義として括りだすべきでは?*/
    display: flex;
    justify-content: center;
    align-items: center;
}
/*アイコンに透明な外包みを付ける*/
.prev span.iconWrapper, .next span.iconWrapper{
    padding: 1.25rem 0rem;
}




/*プログレスバーエリアの表示設定*/
.progress{
    /*上端に横長エリアをベタ付け*/
    position: fixed;
    top: 0px;
    left: 0px;
    z-index:1030;
    width: 100vw;
    height: 0.5rem;

    background: rgba(0,0,0,.125);
    border-radius: 0px;
}
/*プログレスバーの色を規定。それ以外はbootstrapに任せる*/
.progress-bar{
    background-color: #51a1a2;
}
/*既読ファイル数表示の表示設定*/
.progress .progressLabel{
    /*エリア内で位置を左端に固定*/
    position: absolute;
    top: 0px;
    left: 0px;
    width: 100%;
    height: 0.5rem;
    font-size: 0.4rem;
    color: white;
    text-align: center;
    line-height: 1;
}
/*漫画ページ数表記の表示設定*/
.progress .comicLabel{
    /*エリア内で位置を右端に固定*/
    position: absolute;
    top: 0px;
    right: 5vw;
    height: 0.5rem;
    font-size: 0.4rem;
    color: white;
    line-height: 1;
}




/*コントロールボタンエリアの表示設定*/
.operation{
    /*下端に横長エリアをベタ付け*/
    position: fixed;
    bottom: 0px;
    left: 0px;
    z-index:1040;
    height: 2.5rem;
    width: 100vw;

    /*適度にパラつかせた配置にして横並び*/
    display: flex;
    justify-content:space-around;
    align-items: center;
}
/*アイコンに透明な外包みを付ける*/
.operation span.iconWrapper{
    padding: 0rem 1.25rem;
}




/*JSでDOMの表示をコントロールするときの表示設定*/
/*レンダリングごと非表示にしたいとき*/
.disable{
    display: none;
}
/*ボタン押せない感を出したいとき*/
span.error{
    background: rgba(230, 50, 50, 0.35);
}